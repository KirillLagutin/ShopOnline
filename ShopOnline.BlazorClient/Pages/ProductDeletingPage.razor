@page "/ProductDeleting"

@inject IShopClient ShopClient
@inject IToastService ToastService

<PageTitle>Удаление товара</PageTitle>

<h3>Удаление товар</h3>

@if (Products != null)
{
    var productCount = Products.Count();

    if (productCount > 0)
    {
        const int itemsPerRow = 3;

        for (int i = 0; i < productCount; i++)
        {
            var productRowList = Products
                .Skip(i * itemsPerRow)
                .Take(itemsPerRow)
                .ToList();
            
            <div class="row mt-3">
                @foreach (var product in productRowList)
                {
                    <div class="col-md-4 mb-4">
                        <a href="/ProductInfo/@product.Id">
                            <div class="card">
                                <img class="img-thumbnail" src="@product.ImageUrl" alt=""/>
                                <div class="card-body">
                                    <h5 class="card-title mb-3">
                                        @product.Name
                                    </h5>
                                    <p class="card-text">
                                        <b>@product.Price.ToString("C")</b>
                                    </p>
                                </div>
                            </div>
                        </a>
                        <button class="btn btn-primary"
                                @onclick="@(() => DeleteProduct(product.Id))">
                            <b>Удалить товар</b>
                        </button>
                    </div>
                }
            </div>
        }
    }
}
else
{
    <LoadingIcon/>
}

@code {

    private IEnumerable<Product>? Products { get; set; }
    
    protected override async Task OnInitializedAsync()
    {
        Products = await ShopClient.GetProducts();
    }

    private void DeleteProduct(Guid id)
    {
        ShopClient.DeleteProduct(id);
        ToastService.ShowSuccess("Товар удалён!");
    }
}