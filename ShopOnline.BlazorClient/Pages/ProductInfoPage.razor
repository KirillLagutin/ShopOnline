@page "/ProductInfo/{Id:guid}"

@using ShopOnline.Domain.Entities

@inject IToastService ToastService
@inject IShopClient ShopClient

<PageTitle>Информация о товаре</PageTitle>

@if (Product != null)
{
    <h3 class="mb-5">Информация о товаре</h3>
    <div class="row">
        <div class="col-md-6 mb-4">
            <img class="img-fluid" src="@Product.ImageUrl" 
                 alt="@Product.Name">
        </div>
        <div class="col-md-6">
            <h3>@Product.Name</h3>
            <p class="mb-4">@Product.Description</p>
            <p class="mb-4">
                <b>
                    @Product.Price.ToString("C")&nbsp;
                    (@Product.Quantity товаров в наличии)
                </b>
            </p>
            <div>
                <button class="btn btn-primary"
                        @onclick="@(() => AddProductToCart(Product))">
                    <b>Добавить в корзину</b>
                </button>
            </div>
        </div>
    </div>
}
else
{
    <LoadingIcon/>
}


@code {

    [Parameter]
    public Guid Id { get; set; }

    private Product? Product { get; set; }
    
    private IEnumerable<CartItem>? CartItems { get; set; } 

    protected override async Task OnInitializedAsync()
    {
        Product = await ShopClient.GetProduct(Id);
        CartItems = await ShopClient.GetCartItems();
    }
    
    private async Task AddProductToCart(Product? product)
    {
        if (CartItems != null)
        {
            var cartItem = CartItems.First(ci => ci.ProductId == product?.Id);
            await ShopClient.AddToCart(cartItem);

            ToastService.ShowInfo(
                $"{product?.Name} теперь в корзине");
        }
    }
}